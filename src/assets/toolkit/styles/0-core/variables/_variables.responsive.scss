/*============================================================================*\
| RESPONSIVE ATTRIBUTES
\*============================================================================*/

////
/// Defines properties related to general responsive behaviour.
///
/// **Note**: Use `em` units as a responsive breakpoints!
///
/// @required `sass-mq`
///
/// @example scss
///   // Apply styling to mobile and upwards
///     @include breakpoint($from: mobile) {
///       color: red;
///   }
///   // Apply styling up to devices smaller than tablets (exclude tablets)
///   @include breakpoint($until: tablet) {
///       color: blue;
///   }
///   // Same thing, in landscape orientation
///   @include breakpoint($until: tablet, $and: '(orientation: landscape)') {
///       color: hotpink;
///   }
///   // Apply styling to tablets up to desktop (exclude desktop)
///   @include breakpoint(tablet, desktop) {
///       color: green;
///   }
///
/// @group responsive



/// @prop {boolean} [false] - Whether or not should be the information about breakpoints shown.
$breakpoints-show: false !default;





/* = SASS-MQ SETTINGS ======================================================= */



/// @link https://github.com/sass-mq/sass-mq#how-to-use-it
// To enable support for browsers that do not support @media queries,
// (IE <= 8, Firefox <= 3, Opera <= 9) set $mq-responsive to false
// Create a separate stylesheet served exclusively to these browsers,
// meaning @media queries will be rasterized, relying on the cascade itself
$mq-responsive: true !default;


// If you want to display the currently active breakpoint in the top
// right corner of your site during development, add the breakpoints
// to this list, ordered by width, e.g. (mobile, tablet, desktop).
$breakpoints-show-types: (
  'mobile',
  'mobile-large',
  'tablet',
  'desktop',
  'desktop-large',
) !default;


$mq-show-breakpoints: null;
@if ( $breakpoints-show ) {
  $mq-show-breakpoints: $breakpoints-show-types;
}





/* = BREAKPOINT DEFINITIONS ================================================= */


$mobile-layout-ratio:             .85 !default;
$mobile-layout-percentage:        $mobile-layout-ratio * 100% !default;


$mobile-large-min-width:          30em !default; // ~480px
$mobile-large-min-width-rem:      _units_to_rem( $mobile-large-min-width ) !default;

$mobile-large-layout-ratio:       .9 !default;
$mobile-large-layout-percentage:  $mobile-large-layout-ratio * 100% !default;


$tablet-min-width:                43em !default; // ~688px
$tablet-min-width-rem:            _units_to_rem( $tablet-min-width ) !default;

$tablet-layout-ratio:             .925 !default;
$tablet-layout-percentage:        $tablet-layout-ratio * 100% !default;


$desktop-min-width:               61em !default; // ~976px
$desktop-min-width-rem:           _units_to_rem( $desktop-min-width ) !default;

// Keep default layout aligned with browser's default settings.
$desktop-layout-ratio:            1 !default;
$desktop-layout-percentage:       $desktop-layout-ratio * 100% !default;


$desktop-large-min-width:         88em !default; // ~1408px
$desktop-large-min-width-rem:     _units_to_rem( $desktop-large-min-width ) !default;

// Keep default layout aligned with browser's default settings.
$desktop-large-layout-ratio:      1 !default;
$desktop-large-layout-percentage: $desktop-large-layout-ratio * 100% !default;


/// @type {Map} - Min-widths of all main devices for `$sass-mq` plugin.
$mq-breakpoints: (
  'mobile':        .001em,
  'mobile-large':  $mobile-large-min-width,
  'tablet':        $tablet-min-width,
  'desktop':       $desktop-min-width,
  'desktop-large': $desktop-large-min-width,
) !default;




