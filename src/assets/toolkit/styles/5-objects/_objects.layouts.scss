/*============================================================================*\
| LAYOUTS, CONTAINERS AND BLOCKS
\*============================================================================*/

////
/// Contains basic building such as containers, layouts, columns, grids and
/// sub-grids.
///
/// **Note**: It's *highly recommended* to understand how to build structures
/// with these atomic elements before development of new objects and components.
///
/// @group layout





/*= BASIC BUILDING BLOCKS ====================================================*/

/** BLOCK - Universal building block with standard paddings. */
.block { padding: $gap; }


/** CENTRALISER - Restricts the width of the content to allowed centered maximum and aligns to center. */
.centraliser {
  @include clearfix;
  @include margins-horizontal( auto );
  position: relative;
  width: 100%;
  max-width: $centered-max-width;
}


/** SECTOR - Single page section container with unlimited width and no paddings/margins. Can be used to group related components within a layout. */
.sector,
.separated {
  @include clearfix;
  border-bottom: $border;
}


/** LAYOUT - Contains all the content's columns and layout combinations */
.layout {
  @include clearfix;
  width: 100%;

  &.block {
    @include paddings-vertical( 0 );
    @include paddings-horizontal( $gap-half );
  }

  // Sticky footer - stretch content to maximum
  body > & {
    display: block;
    flex: 1 1 auto; // = 1 (1 1 auto is *required* for IE-based browsers!)
  }

  /* IE10+ fix for tablet and smaller where layout has white space below */
  @include bp( $until: desktop, $and: '( -ms-high-contrast: none ), ( -ms-high-contrast: active )' ) {
    height: 100%;
  }

  @include bp( $until: desktop ) {
    &.block {
      @include paddings-horizontal( 0 );
    }
  }
}





/*= 3-COLUMN LAYOUT ==========================================================*/


// Main content panel - can contain Content only column and Widget bar (optional).
.content-panel {
  @include clearfix;
  position: relative;
  width: 100%;

  > img { width: 100%; }

  > main,
  > aside {
    vertical-align: top;

    > .block {
      @include paddings-vertical( $gap-larger );
    }
  }

  @include bp( tablet ) {
    /** 1st Content bar + 2nd widgets bar */
    $widgetbar-width: 25%; // Out of the content-panel
    $content-width:   100% - $widgetbar-width;


    /** Main content *ONLY* */
    > main:last-child { width: 100%; }

    /** Main content + widgetbar */
    > main:not(:last-child) {
      float: left;
      width: $content-width;
    }

    > aside {
      float: left;
      width: $widgetbar-width;
    }
  }
}

.sidebar {
  z-index:  $z-index-lower;
  position: relative;
}

@include bp( desktop ) {
  /** 1st Left sidebar + Main content panel 2nd*/
  $sidebar-width:       20%;
  $sidebar-flex-width:  17rem;
  $content-panel-width: 100% - $sidebar-width;


  body > .layout { display: flex; }

  .sidebar {
    float: left;
    flex: 0 0 $sidebar-flex-width;
    width: $sidebar-width;
  }

  .content-panel {
    /** Content panel *ONLY* */
    &:first-child {
      // Main content *ONLY*
      > main:last-child {
        > .block { padding-left: 0; }
      }
    }

    > main:last-child {
      > .block { padding-right: 0; }
    }

    /** 1st Sidebar + 2nd Content panel */
    &:not(:first-child) {
      float: left;
      flex: 1 1 auto;
      width: $content-panel-width;
    }

    > aside {
      > .block { padding-right: 0; }
    }
  }
}
